---
- name: Populate service facts
  ansible.builtin.service_facts:

- name: Stop Radarr
  ansible.builtin.systemd:
    name: radarr
    state: stopped
  notify:
    - Start Radarr
  when: '"radarr.service" in services'
  tags:
    # this will always stop/start radarr, because we don't want to potentially
    # install a new version below while it's running.
    - molecule-idempotence-notest

- name: Install dependencies
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - curl
    - sqlite3

- name: Create Radarr directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: "{{ radarr__username }}"
    group: "{{ radarr__group }}"
  with_items:
    - "{{ radarr__config_directory }}"
    - "{{ radarr__install_directory }}"

- name: Download latest Radarr
  ansible.builtin.get_url:
    url: |
      http://radarr.servarr.com/v1/update/master/updatefile?os=linux&runtime=netcore&arch=x64
    dest: /tmp/radarr.tar.gz
    mode: "0644"
  when: radarr__version == 'latest'

- name: "Download Radarr v{{ radarr__version }}"
  ansible.builtin.get_url:
    url: |
      "https://github.com/Radarr/Radarr/releases/download/v{{ radarr__version }}/Radarr.master.{{ radarr__version }}.linux-core-x64.tar.gz"
    dest: /tmp/radarr.tar.gz
    mode: "0644"
  when: radarr__version != 'latest'

- name: Decompress Radarr
  ansible.builtin.unarchive:
    src: /tmp/radarr.tar.gz
    dest: "{{ radarr__install_directory }}"
    owner: "{{ radarr__username }}"
    group: "{{ radarr__username }}"
    remote_src: yes
    creates: "{{ radarr__install_directory }}/Radarr"

- name: Install libicu (Ubuntu 18.04)
  ansible.builtin.package:
    name: libicu60
    state: present
  when:
    - ansible_distribution_version == '18.04'
    - ansible_distribution == 'Ubuntu'

- name: Install libicu (Ubuntu 20.04)
  ansible.builtin.package:
    name: libicu66
    state: present
  when:
    - ansible_distribution_version == '20.04'
    - ansible_distribution == 'Ubuntu'

- name: Install libicu (Debian Buster)
  ansible.builtin.package:
    name: libicu63
    state: present
  when:
    - ansible_distribution_version == '10'
    - ansible_distribution == 'Debian'

- name: Install libicu (Debian Bullseye)
  ansible.builtin.package:
    name: libicu67
    state: present
  when:
    - ansible_distribution_version == '11'
    - ansible_distribution == 'Debian'

- name: Configure systemd
  ansible.builtin.template:
    src: radarr.service.j2
    dest: /etc/systemd/system/radarr.service
    owner: root
    group: root
    mode: "0644"
  notify:
    - Start Radarr

- name: Check if Radarr config file exists
  ansible.builtin.stat:
    path: "{{ radarr__config_directory }}/config.xml"
  register: raco

- name: Configure UrlBase in Radarr (existing config)
  ansible.builtin.lineinfile:
    path: "{{ radarr__config_directory }}/config.xml"
    regexp: "^  <UrlBase>.*</UrlBase>"
    line: "  <UrlBase>/radarr</UrlBase>"
    insertbefore: "</Config>"
  when: raco.stat.exists

- name: Configure UrlBase in Radarr (no config file)
  ansible.builtin.copy:
    src: radarr-config.xml
    dest: "{{ radarr__config_directory }}/config.xml"
    mode: "0644"
    owner: "{{ radarr__username }}"
    group: "{{ radarr__username }}"
  when: not raco.stat.exists
